Full docker documentation
=========================

Docker definition
^^^^^^^^^^^^^^^^^

Docker daemon - сервер, работающий в фоновом режиме на хост-машине и умеющий скачивать, заливать образы, заливать из них контейнеры, следить за запущенными контейнерами, собирать логи, настраивать сеть между контейнерами. Кроме того, именно он создет образы контейнеров.

Docker - утилита для управления Docker daemon по HTTP. При сборке образа docker принимает пассивное участие, архивирует папку и передает по сети демону, который выполняет всю работу, поэтому лучше собирать тяжелые образы локально.

Docker Hub - хранение контейнеров. 

Docker image - компонента сборки docker.

Docker container - все, что нужно для работы приложения, каждый контейнер изолирован и является безопасной платформой для приложения.


Docker process
^^^^^^^^^^^^^^

Команда ``sudo docker run -it ubuntu /bin/bash``
#. Скачивает образ ubuntu.
#. Создает контейнер.
#. Инициализирует суть\мост - позволяет обшаться докеру с хост машиной
#. Устанавливает IP адрес
#. Запускает указанный процесс
#. Обрабатывает и выдает вывод приложения
   
Docker important
^^^^^^^^^^^^^^^^

Docker использует объединенную файловую систему (union filesystem) для контейнеров, что позволяет монтировать несколько файловых систем в порядке иерархии и появляться в качестве единой системы.  Файловая система образа монтируется как read-only слой и любые изменения запущенного контейнера приводят к измненеию последующих

Docker naming
^^^^^^^^^^^^^

#. author/name -принадлежат пользователю
#. name - общие подтвержденные
#. localhost:5000/name - развернуты на определенном сервере


Docker flags
^^^^^^^^^^^^

- h, --hostname


Docker commands
^^^^^^^^^^^^^^^

Доступ к командной строке внутри контейнера
.. code:: console

        $ docker run -it container_name /bin/bash

Получение полной информации о контейнере
.. code:: console
        
        $ docker inspect container_name

Получение списка измененных файлов в контейнере
.. code:: console

        $ docker diff container_name

Получение списка логов
.. code:: console
        
        $ docker logs container_name


Сохранение в образ из какого-то базового образа
.. code:: console

        $ docker commit base_image__name image_name


Hello
~~~~~~~~

